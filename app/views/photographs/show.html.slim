- content_for(:body_extras) do
  | itemscope itemtype="http://schema.org/ImageObject"

section id="photographs-show"
  section class="row"
    article class="large-9 small-12 columns"
      section class="display"
        div class="image"
          - if @photograph.has_precalculated_sizes?
            = photo_tag @photograph, :large, itemprop: "image"
          - else
            - if @photograph.landscape?
              = photo_tag @photograph, "1500x", itemprop: "image"
            - elsif @photograph.portrait?
              = photo_tag @photograph, "x1000", itemprop: "image"
            - else
              = photo_tag @photograph, "1500x1500>", itemprop: "image"

          = interactions_for @photograph

          - cache([@photograph, @photograph.metadata, :description]) do
            aside class="description"
              table
                tr
                  td class="text"
                    - if @photograph.fetch_metadata.has_text?
                      h4 itemprop="name"
                        = @photograph.fetch_metadata.title

                      - if @photograph.fetch_metadata.description.present?
                        div itemprop="description"
                          = simple_format @photograph.fetch_metadata.description

                  td class="share"
                    = render partial: "shared/social_buttons"

              div class="clear"

        - if @photograph.comments_enabled?
          = render @photograph.comment_threads

    aside id="photographs-sidebar" class="large-3 small-12 columns"
      - if user_signed_in? && current_user == @photograph.user
        = link_to t("photographs.edit"), edit_account_photograph_path(@photograph), class: "button secondary expand"

      = creator_details_for @photograph

      div class="show-for-touch"
        = interactions_for @photograph
      
      - cache([@photograph, @metadata, :sidebar], expires_in: 5.minutes) do
        = metadata_table_for @photograph, format: :short

        - if @photograph.collections.count > 0
          h5= t("photographs.collections")
          table
            tbody
              - @photograph.collections.each do |collection|
                tr
                  td= link_to collection.name, collection_path(collection)

        - if @photograph.fetch_metadata.keywords.size > 0
          h5= t("photographs.metadata.keywords")
          ul id="photographs-keywords" class="inline-list"
            - @photograph.fetch_metadata.keywords.each do |keyword|
              li
                = link_to search_photographs_path(keyword: keyword) do
                  span class="label radius"
                    = keyword

        - if @photograph.show_location_data && @photograph.metadata.has_location_data?
          h5= t("photographs.location")
          = render partial: "map", locals: { photograph: @photograph }

- content_for(:after_body) do
  - once :photo_interactions_hint do
    ul[class="joyride-list" data-joyride]
      li data-text="OK"
        = simple_format t("photographs.interactions_hint")
